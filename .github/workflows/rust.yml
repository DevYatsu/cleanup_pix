name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build Project
        run: cargo build --release --verbose

      - name: Run Tests
        run: cargo test --verbose

      - name: Archive Binary
        run: |
          mkdir -p dist
          cp target/release/* dist/
          cd dist
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            zip -r rust-binary-windows.zip ./*
          else
            tar -czvf rust-binary-${{ matrix.os }}.tar.gz ./*
          fi

      - name: Upload Release Asset (Linux/Mac)
        if: github.event_name == 'release' && matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/rust-binary-${{ matrix.os }}.tar.gz
          asset_name: rust-binary-${{ matrix.os }}.tar.gz
          content_type: application/gzip

      - name: Upload Release Asset (Windows)
        if: github.event_name == 'release' && matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/rust-binary-windows.zip
          asset_name: rust-binary-windows.zip
          content_type: application/zip
